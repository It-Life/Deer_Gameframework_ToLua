// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Sounds_Config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ConfigData {

  /// <summary>Holder for reflection information generated from Sounds_Config.proto</summary>
  public static partial class SoundsConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for Sounds_Config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SoundsConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNTb3VuZHNfQ29uZmlnLnByb3RvEgpDb25maWdEYXRhIpQBCg1Tb3VuZHNf",
            "Q29uZmlnEgoKAmlkGAEgASgNEhIKCnNvdW5kX25hbWUYAiABKAkSFgoOc291",
            "bmRfcHJpb3JpdHkYAyABKAkSFAoMc291bmRfdm9sdW1lGAQgASgCEgwKBGxv",
            "b3AYBSABKA0SFQoNc3BhdGlhbF9ibGVuZBgGIAEoDRIQCghkaXN0YW5jZRgH",
            "IAEoAiI+ChJTb3VuZHNfQ29uZmlnX0RhdGESKAoFaXRlbXMYASADKAsyGS5D",
            "b25maWdEYXRhLlNvdW5kc19Db25maWdCJQojY29tLmdhbWUuanVoZS5zZXJ2",
            "ZXIucHJvdG9idWYucHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.Sounds_Config), global::ConfigData.Sounds_Config.Parser, new[]{ "Id", "SoundName", "SoundPriority", "SoundVolume", "Loop", "SpatialBlend", "Distance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.Sounds_Config_Data), global::ConfigData.Sounds_Config_Data.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Sounds_Config : pb::IMessage<Sounds_Config> {
    private static readonly pb::MessageParser<Sounds_Config> _parser = new pb::MessageParser<Sounds_Config>(() => new Sounds_Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Sounds_Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.SoundsConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sounds_Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sounds_Config(Sounds_Config other) : this() {
      id_ = other.id_;
      soundName_ = other.soundName_;
      soundPriority_ = other.soundPriority_;
      soundVolume_ = other.soundVolume_;
      loop_ = other.loop_;
      spatialBlend_ = other.spatialBlend_;
      distance_ = other.distance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sounds_Config Clone() {
      return new Sounds_Config(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    ///* 唯一标识 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "sound_name" field.</summary>
    public const int SoundNameFieldNumber = 2;
    private string soundName_ = "";
    /// <summary>
    ///* 音效名字 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SoundName {
      get { return soundName_; }
      set {
        soundName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sound_priority" field.</summary>
    public const int SoundPriorityFieldNumber = 3;
    private string soundPriority_ = "";
    /// <summary>
    ///* 音效优先级 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SoundPriority {
      get { return soundPriority_; }
      set {
        soundPriority_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sound_volume" field.</summary>
    public const int SoundVolumeFieldNumber = 4;
    private float soundVolume_;
    /// <summary>
    ///* 音量大小 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SoundVolume {
      get { return soundVolume_; }
      set {
        soundVolume_ = value;
      }
    }

    /// <summary>Field number for the "loop" field.</summary>
    public const int LoopFieldNumber = 5;
    private uint loop_;
    /// <summary>
    ///* 是否循环 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Loop {
      get { return loop_; }
      set {
        loop_ = value;
      }
    }

    /// <summary>Field number for the "spatial_blend" field.</summary>
    public const int SpatialBlendFieldNumber = 6;
    private uint spatialBlend_;
    /// <summary>
    ///* 空间混合 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SpatialBlend {
      get { return spatialBlend_; }
      set {
        spatialBlend_ = value;
      }
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 7;
    private float distance_;
    /// <summary>
    ///* 最大距离 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Sounds_Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Sounds_Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SoundName != other.SoundName) return false;
      if (SoundPriority != other.SoundPriority) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SoundVolume, other.SoundVolume)) return false;
      if (Loop != other.Loop) return false;
      if (SpatialBlend != other.SpatialBlend) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (SoundName.Length != 0) hash ^= SoundName.GetHashCode();
      if (SoundPriority.Length != 0) hash ^= SoundPriority.GetHashCode();
      if (SoundVolume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SoundVolume);
      if (Loop != 0) hash ^= Loop.GetHashCode();
      if (SpatialBlend != 0) hash ^= SpatialBlend.GetHashCode();
      if (Distance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (SoundName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SoundName);
      }
      if (SoundPriority.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SoundPriority);
      }
      if (SoundVolume != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SoundVolume);
      }
      if (Loop != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Loop);
      }
      if (SpatialBlend != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(SpatialBlend);
      }
      if (Distance != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Distance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (SoundName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SoundName);
      }
      if (SoundPriority.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SoundPriority);
      }
      if (SoundVolume != 0F) {
        size += 1 + 4;
      }
      if (Loop != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Loop);
      }
      if (SpatialBlend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpatialBlend);
      }
      if (Distance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Sounds_Config other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.SoundName.Length != 0) {
        SoundName = other.SoundName;
      }
      if (other.SoundPriority.Length != 0) {
        SoundPriority = other.SoundPriority;
      }
      if (other.SoundVolume != 0F) {
        SoundVolume = other.SoundVolume;
      }
      if (other.Loop != 0) {
        Loop = other.Loop;
      }
      if (other.SpatialBlend != 0) {
        SpatialBlend = other.SpatialBlend;
      }
      if (other.Distance != 0F) {
        Distance = other.Distance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            SoundName = input.ReadString();
            break;
          }
          case 26: {
            SoundPriority = input.ReadString();
            break;
          }
          case 37: {
            SoundVolume = input.ReadFloat();
            break;
          }
          case 40: {
            Loop = input.ReadUInt32();
            break;
          }
          case 48: {
            SpatialBlend = input.ReadUInt32();
            break;
          }
          case 61: {
            Distance = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Sounds_Config_Data : pb::IMessage<Sounds_Config_Data> {
    private static readonly pb::MessageParser<Sounds_Config_Data> _parser = new pb::MessageParser<Sounds_Config_Data>(() => new Sounds_Config_Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Sounds_Config_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.SoundsConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sounds_Config_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sounds_Config_Data(Sounds_Config_Data other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sounds_Config_Data Clone() {
      return new Sounds_Config_Data(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ConfigData.Sounds_Config> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::ConfigData.Sounds_Config.Parser);
    private readonly pbc::RepeatedField<global::ConfigData.Sounds_Config> items_ = new pbc::RepeatedField<global::ConfigData.Sounds_Config>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ConfigData.Sounds_Config> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Sounds_Config_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Sounds_Config_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Sounds_Config_Data other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
