// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Item_Config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ConfigData {

  /// <summary>Holder for reflection information generated from Item_Config.proto</summary>
  public static partial class ItemConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for Item_Config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFJdGVtX0NvbmZpZy5wcm90bxIKQ29uZmlnRGF0YSJ7CgtJdGVtX0NvbmZp",
            "ZxIKCgJpZBgBIAEoDRIRCglpdGVtX25hbWUYAiABKAkSEQoJaXRlbV9pY29u",
            "GAMgASgJEhAKCGl0ZW1fcXVhGAQgASgNEhEKCWl0ZW1fdHlwZRgFIAEoDRIV",
            "Cg1pdGVtX3BpbGVfbnVtGAYgASgNIjoKEEl0ZW1fQ29uZmlnX0RhdGESJgoF",
            "aXRlbXMYASADKAsyFy5Db25maWdEYXRhLkl0ZW1fQ29uZmlnQiUKI2NvbS5n",
            "YW1lLmp1aGUuc2VydmVyLnByb3RvYnVmLnByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.Item_Config), global::ConfigData.Item_Config.Parser, new[]{ "Id", "ItemName", "ItemIcon", "ItemQua", "ItemType", "ItemPileNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.Item_Config_Data), global::ConfigData.Item_Config_Data.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Item_Config : pb::IMessage<Item_Config> {
    private static readonly pb::MessageParser<Item_Config> _parser = new pb::MessageParser<Item_Config>(() => new Item_Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item_Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.ItemConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item_Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item_Config(Item_Config other) : this() {
      id_ = other.id_;
      itemName_ = other.itemName_;
      itemIcon_ = other.itemIcon_;
      itemQua_ = other.itemQua_;
      itemType_ = other.itemType_;
      itemPileNum_ = other.itemPileNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item_Config Clone() {
      return new Item_Config(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    /// <summary>
    ///* 唯一标识 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "item_name" field.</summary>
    public const int ItemNameFieldNumber = 2;
    private string itemName_ = "";
    /// <summary>
    ///* 道具名字 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemName {
      get { return itemName_; }
      set {
        itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item_icon" field.</summary>
    public const int ItemIconFieldNumber = 3;
    private string itemIcon_ = "";
    /// <summary>
    ///* 图标 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemIcon {
      get { return itemIcon_; }
      set {
        itemIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item_qua" field.</summary>
    public const int ItemQuaFieldNumber = 4;
    private uint itemQua_;
    /// <summary>
    ///* 品质 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemQua {
      get { return itemQua_; }
      set {
        itemQua_ = value;
      }
    }

    /// <summary>Field number for the "item_type" field.</summary>
    public const int ItemTypeFieldNumber = 5;
    private uint itemType_;
    /// <summary>
    ///* 类别 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemType {
      get { return itemType_; }
      set {
        itemType_ = value;
      }
    }

    /// <summary>Field number for the "item_pile_num" field.</summary>
    public const int ItemPileNumFieldNumber = 6;
    private uint itemPileNum_;
    /// <summary>
    ///* 最大堆叠数 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemPileNum {
      get { return itemPileNum_; }
      set {
        itemPileNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item_Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item_Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ItemName != other.ItemName) return false;
      if (ItemIcon != other.ItemIcon) return false;
      if (ItemQua != other.ItemQua) return false;
      if (ItemType != other.ItemType) return false;
      if (ItemPileNum != other.ItemPileNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ItemName.Length != 0) hash ^= ItemName.GetHashCode();
      if (ItemIcon.Length != 0) hash ^= ItemIcon.GetHashCode();
      if (ItemQua != 0) hash ^= ItemQua.GetHashCode();
      if (ItemType != 0) hash ^= ItemType.GetHashCode();
      if (ItemPileNum != 0) hash ^= ItemPileNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ItemName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ItemName);
      }
      if (ItemIcon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ItemIcon);
      }
      if (ItemQua != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ItemQua);
      }
      if (ItemType != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ItemType);
      }
      if (ItemPileNum != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ItemPileNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (ItemName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
      }
      if (ItemIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemIcon);
      }
      if (ItemQua != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemQua);
      }
      if (ItemType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemType);
      }
      if (ItemPileNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemPileNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item_Config other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ItemName.Length != 0) {
        ItemName = other.ItemName;
      }
      if (other.ItemIcon.Length != 0) {
        ItemIcon = other.ItemIcon;
      }
      if (other.ItemQua != 0) {
        ItemQua = other.ItemQua;
      }
      if (other.ItemType != 0) {
        ItemType = other.ItemType;
      }
      if (other.ItemPileNum != 0) {
        ItemPileNum = other.ItemPileNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            ItemName = input.ReadString();
            break;
          }
          case 26: {
            ItemIcon = input.ReadString();
            break;
          }
          case 32: {
            ItemQua = input.ReadUInt32();
            break;
          }
          case 40: {
            ItemType = input.ReadUInt32();
            break;
          }
          case 48: {
            ItemPileNum = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Item_Config_Data : pb::IMessage<Item_Config_Data> {
    private static readonly pb::MessageParser<Item_Config_Data> _parser = new pb::MessageParser<Item_Config_Data>(() => new Item_Config_Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item_Config_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.ItemConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item_Config_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item_Config_Data(Item_Config_Data other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item_Config_Data Clone() {
      return new Item_Config_Data(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ConfigData.Item_Config> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::ConfigData.Item_Config.Parser);
    private readonly pbc::RepeatedField<global::ConfigData.Item_Config> items_ = new pbc::RepeatedField<global::ConfigData.Item_Config>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ConfigData.Item_Config> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item_Config_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item_Config_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item_Config_Data other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
