//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class TPSpriteComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(TPSpriteComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("SetImage", new LuaCSFunction(SetImage));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetImage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				TPSpriteComponent obj = (TPSpriteComponent)ToLua.CheckObject<TPSpriteComponent>(L, 1);
				UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				obj.SetImage(arg0, arg1);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<bool>(L, 4))
			{
				TPSpriteComponent obj = (TPSpriteComponent)ToLua.CheckObject<TPSpriteComponent>(L, 1);
				UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				bool arg2 = LuaDLL.lua_toboolean(L, 4);
				obj.SetImage(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<string>(L, 4))
			{
				TPSpriteComponent obj = (TPSpriteComponent)ToLua.CheckObject<TPSpriteComponent>(L, 1);
				UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.ToString(L, 4);
				obj.SetImage(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				TPSpriteComponent obj = (TPSpriteComponent)ToLua.CheckObject<TPSpriteComponent>(L, 1);
				UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckObject<UnityEngine.UI.Image>(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				obj.SetImage(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: TPSpriteComponent.SetImage");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

