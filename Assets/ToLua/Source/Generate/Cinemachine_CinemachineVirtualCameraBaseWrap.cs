//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Cinemachine_CinemachineVirtualCameraBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Cinemachine.CinemachineVirtualCameraBase), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddExtension", new LuaCSFunction(AddExtension));
		L.RegFunction("RemoveExtension", new LuaCSFunction(RemoveExtension));
		L.RegFunction("IsLiveChild", new LuaCSFunction(IsLiveChild));
		L.RegFunction("UpdateCameraState", new LuaCSFunction(UpdateCameraState));
		L.RegFunction("InternalUpdateCameraState", new LuaCSFunction(InternalUpdateCameraState));
		L.RegFunction("OnTransitionFromCamera", new LuaCSFunction(OnTransitionFromCamera));
		L.RegFunction("MoveToTopOfPrioritySubqueue", new LuaCSFunction(MoveToTopOfPrioritySubqueue));
		L.RegFunction("OnTargetObjectWarped", new LuaCSFunction(OnTargetObjectWarped));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("m_ExcludedPropertiesInInspector", new LuaCSFunction(get_m_ExcludedPropertiesInInspector), new LuaCSFunction(set_m_ExcludedPropertiesInInspector));
		L.RegVar("m_LockStageInInspector", new LuaCSFunction(get_m_LockStageInInspector), new LuaCSFunction(set_m_LockStageInInspector));
		L.RegVar("m_Priority", new LuaCSFunction(get_m_Priority), new LuaCSFunction(set_m_Priority));
		L.RegVar("m_StandbyUpdate", new LuaCSFunction(get_m_StandbyUpdate), new LuaCSFunction(set_m_StandbyUpdate));
		L.RegVar("ValidatingStreamVersion", new LuaCSFunction(get_ValidatingStreamVersion), null);
		L.RegVar("Name", new LuaCSFunction(get_Name), null);
		L.RegVar("Description", new LuaCSFunction(get_Description), null);
		L.RegVar("Priority", new LuaCSFunction(get_Priority), new LuaCSFunction(set_Priority));
		L.RegVar("VirtualCameraGameObject", new LuaCSFunction(get_VirtualCameraGameObject), null);
		L.RegVar("IsValid", new LuaCSFunction(get_IsValid), null);
		L.RegVar("State", new LuaCSFunction(get_State), null);
		L.RegVar("ParentCamera", new LuaCSFunction(get_ParentCamera), null);
		L.RegVar("LookAt", new LuaCSFunction(get_LookAt), new LuaCSFunction(set_LookAt));
		L.RegVar("Follow", new LuaCSFunction(get_Follow), new LuaCSFunction(set_Follow));
		L.RegVar("PreviousStateIsValid", new LuaCSFunction(get_PreviousStateIsValid), new LuaCSFunction(set_PreviousStateIsValid));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddExtension(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)ToLua.CheckObject<Cinemachine.CinemachineVirtualCameraBase>(L, 1);
			Cinemachine.CinemachineExtension arg0 = (Cinemachine.CinemachineExtension)ToLua.CheckObject<Cinemachine.CinemachineExtension>(L, 2);
			obj.AddExtension(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveExtension(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)ToLua.CheckObject<Cinemachine.CinemachineVirtualCameraBase>(L, 1);
			Cinemachine.CinemachineExtension arg0 = (Cinemachine.CinemachineExtension)ToLua.CheckObject<Cinemachine.CinemachineExtension>(L, 2);
			obj.RemoveExtension(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsLiveChild(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)ToLua.CheckObject<Cinemachine.CinemachineVirtualCameraBase>(L, 1);
				Cinemachine.ICinemachineCamera arg0 = (Cinemachine.ICinemachineCamera)ToLua.CheckObject<Cinemachine.ICinemachineCamera>(L, 2);
				bool o = obj.IsLiveChild(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3)
			{
				Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)ToLua.CheckObject<Cinemachine.CinemachineVirtualCameraBase>(L, 1);
				Cinemachine.ICinemachineCamera arg0 = (Cinemachine.ICinemachineCamera)ToLua.CheckObject<Cinemachine.ICinemachineCamera>(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				bool o = obj.IsLiveChild(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Cinemachine.CinemachineVirtualCameraBase.IsLiveChild");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateCameraState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)ToLua.CheckObject<Cinemachine.CinemachineVirtualCameraBase>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.UpdateCameraState(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InternalUpdateCameraState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)ToLua.CheckObject<Cinemachine.CinemachineVirtualCameraBase>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.InternalUpdateCameraState(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTransitionFromCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)ToLua.CheckObject<Cinemachine.CinemachineVirtualCameraBase>(L, 1);
			Cinemachine.ICinemachineCamera arg0 = (Cinemachine.ICinemachineCamera)ToLua.CheckObject<Cinemachine.ICinemachineCamera>(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.OnTransitionFromCamera(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveToTopOfPrioritySubqueue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)ToLua.CheckObject<Cinemachine.CinemachineVirtualCameraBase>(L, 1);
			obj.MoveToTopOfPrioritySubqueue();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTargetObjectWarped(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)ToLua.CheckObject<Cinemachine.CinemachineVirtualCameraBase>(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			obj.OnTargetObjectWarped(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_ExcludedPropertiesInInspector(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			string[] ret = obj.m_ExcludedPropertiesInInspector;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_ExcludedPropertiesInInspector on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_LockStageInInspector(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			Cinemachine.CinemachineCore.Stage[] ret = obj.m_LockStageInInspector;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_LockStageInInspector on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Priority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			int ret = obj.m_Priority;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Priority on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_StandbyUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			Cinemachine.CinemachineVirtualCameraBase.StandbyUpdateMode ret = obj.m_StandbyUpdate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_StandbyUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ValidatingStreamVersion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			int ret = obj.ValidatingStreamVersion;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ValidatingStreamVersion on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			string ret = obj.Name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Description(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			string ret = obj.Description;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Description on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Priority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			int ret = obj.Priority;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Priority on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VirtualCameraGameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			UnityEngine.GameObject ret = obj.VirtualCameraGameObject;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VirtualCameraGameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsValid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			bool ret = obj.IsValid;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsValid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_State(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			Cinemachine.CameraState ret = obj.State;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index State on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ParentCamera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			Cinemachine.ICinemachineCamera ret = obj.ParentCamera;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ParentCamera on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LookAt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			UnityEngine.Transform ret = obj.LookAt;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LookAt on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Follow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			UnityEngine.Transform ret = obj.Follow;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Follow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PreviousStateIsValid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			bool ret = obj.PreviousStateIsValid;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PreviousStateIsValid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_ExcludedPropertiesInInspector(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			string[] arg0 = ToLua.CheckStringArray(L, 2);
			obj.m_ExcludedPropertiesInInspector = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_ExcludedPropertiesInInspector on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_LockStageInInspector(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			Cinemachine.CinemachineCore.Stage[] arg0 = ToLua.CheckStructArray<Cinemachine.CinemachineCore.Stage>(L, 2);
			obj.m_LockStageInInspector = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_LockStageInInspector on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Priority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.m_Priority = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Priority on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_StandbyUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			Cinemachine.CinemachineVirtualCameraBase.StandbyUpdateMode arg0 = (Cinemachine.CinemachineVirtualCameraBase.StandbyUpdateMode)ToLua.CheckObject(L, 2, TypeTraits<Cinemachine.CinemachineVirtualCameraBase.StandbyUpdateMode>.type);
			obj.m_StandbyUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_StandbyUpdate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Priority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.Priority = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Priority on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LookAt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.LookAt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LookAt on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Follow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.Follow = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Follow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PreviousStateIsValid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Cinemachine.CinemachineVirtualCameraBase obj = (Cinemachine.CinemachineVirtualCameraBase)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.PreviousStateIsValid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PreviousStateIsValid on a nil value");
		}
	}
}

