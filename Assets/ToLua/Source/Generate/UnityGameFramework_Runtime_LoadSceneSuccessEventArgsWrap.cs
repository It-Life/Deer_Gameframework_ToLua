//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_LoadSceneSuccessEventArgsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.LoadSceneSuccessEventArgs), typeof(GameFramework.Event.GameEventArgs));
		L.RegFunction("Create", new LuaCSFunction(Create));
		L.RegFunction("Clear", new LuaCSFunction(Clear));
		L.RegFunction("New", new LuaCSFunction(_CreateUnityGameFramework_Runtime_LoadSceneSuccessEventArgs));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("EventId", new LuaCSFunction(get_EventId), null);
		L.RegVar("Id", new LuaCSFunction(get_Id), null);
		L.RegVar("SceneAssetName", new LuaCSFunction(get_SceneAssetName), null);
		L.RegVar("Duration", new LuaCSFunction(get_Duration), null);
		L.RegVar("UserData", new LuaCSFunction(get_UserData), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityGameFramework_Runtime_LoadSceneSuccessEventArgs(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityGameFramework.Runtime.LoadSceneSuccessEventArgs obj = new UnityGameFramework.Runtime.LoadSceneSuccessEventArgs();
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityGameFramework.Runtime.LoadSceneSuccessEventArgs.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameFramework.Scene.LoadSceneSuccessEventArgs arg0 = (GameFramework.Scene.LoadSceneSuccessEventArgs)ToLua.CheckObject<GameFramework.Scene.LoadSceneSuccessEventArgs>(L, 1);
			UnityGameFramework.Runtime.LoadSceneSuccessEventArgs o = UnityGameFramework.Runtime.LoadSceneSuccessEventArgs.Create(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.LoadSceneSuccessEventArgs obj = (UnityGameFramework.Runtime.LoadSceneSuccessEventArgs)ToLua.CheckObject<UnityGameFramework.Runtime.LoadSceneSuccessEventArgs>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EventId(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, UnityGameFramework.Runtime.LoadSceneSuccessEventArgs.EventId);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.LoadSceneSuccessEventArgs obj = (UnityGameFramework.Runtime.LoadSceneSuccessEventArgs)o;
			int ret = obj.Id;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Id on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SceneAssetName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.LoadSceneSuccessEventArgs obj = (UnityGameFramework.Runtime.LoadSceneSuccessEventArgs)o;
			string ret = obj.SceneAssetName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SceneAssetName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Duration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.LoadSceneSuccessEventArgs obj = (UnityGameFramework.Runtime.LoadSceneSuccessEventArgs)o;
			float ret = obj.Duration;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Duration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UserData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.LoadSceneSuccessEventArgs obj = (UnityGameFramework.Runtime.LoadSceneSuccessEventArgs)o;
			object ret = obj.UserData;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UserData on a nil value");
		}
	}
}

