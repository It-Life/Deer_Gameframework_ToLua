//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class zFrame_UI_JoystickWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(zFrame.UI.Joystick), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("maxRadius", new LuaCSFunction(get_maxRadius), new LuaCSFunction(set_maxRadius));
		L.RegVar("activatedAxis", new LuaCSFunction(get_activatedAxis), new LuaCSFunction(set_activatedAxis));
		L.RegVar("OnValueChanged", new LuaCSFunction(get_OnValueChanged), new LuaCSFunction(set_OnValueChanged));
		L.RegVar("OnPointerDown", new LuaCSFunction(get_OnPointerDown), new LuaCSFunction(set_OnPointerDown));
		L.RegVar("OnPointerUp", new LuaCSFunction(get_OnPointerUp), new LuaCSFunction(set_OnPointerUp));
		L.RegVar("IsDraging", new LuaCSFunction(get_IsDraging), null);
		L.RegVar("FingerId", new LuaCSFunction(get_FingerId), null);
		L.RegVar("ShowDirectionArrow", new LuaCSFunction(get_ShowDirectionArrow), new LuaCSFunction(set_ShowDirectionArrow));
		L.RegVar("IsDynamic", new LuaCSFunction(get_IsDynamic), new LuaCSFunction(set_IsDynamic));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxRadius(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			float ret = obj.maxRadius;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxRadius on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activatedAxis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			zFrame.UI.Joystick.Direction ret = obj.activatedAxis;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index activatedAxis on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnValueChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			zFrame.UI.Joystick.JoystickEvent ret = obj.OnValueChanged;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnValueChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPointerDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			zFrame.UI.Joystick.JoystickEvent ret = obj.OnPointerDown;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPointerDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPointerUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			zFrame.UI.Joystick.JoystickEvent ret = obj.OnPointerUp;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPointerUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsDraging(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			bool ret = obj.IsDraging;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsDraging on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FingerId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			int ret = obj.FingerId;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FingerId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ShowDirectionArrow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			bool ret = obj.ShowDirectionArrow;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShowDirectionArrow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsDynamic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			bool ret = obj.IsDynamic;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsDynamic on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxRadius(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.maxRadius = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxRadius on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_activatedAxis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			zFrame.UI.Joystick.Direction arg0 = (zFrame.UI.Joystick.Direction)ToLua.CheckObject(L, 2, TypeTraits<zFrame.UI.Joystick.Direction>.type);
			obj.activatedAxis = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index activatedAxis on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnValueChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			zFrame.UI.Joystick.JoystickEvent arg0 = (zFrame.UI.Joystick.JoystickEvent)ToLua.CheckObject<zFrame.UI.Joystick.JoystickEvent>(L, 2);
			obj.OnValueChanged = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnValueChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPointerDown(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			zFrame.UI.Joystick.JoystickEvent arg0 = (zFrame.UI.Joystick.JoystickEvent)ToLua.CheckObject<zFrame.UI.Joystick.JoystickEvent>(L, 2);
			obj.OnPointerDown = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPointerDown on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPointerUp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			zFrame.UI.Joystick.JoystickEvent arg0 = (zFrame.UI.Joystick.JoystickEvent)ToLua.CheckObject<zFrame.UI.Joystick.JoystickEvent>(L, 2);
			obj.OnPointerUp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPointerUp on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ShowDirectionArrow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ShowDirectionArrow = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShowDirectionArrow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsDynamic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			zFrame.UI.Joystick obj = (zFrame.UI.Joystick)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsDynamic = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsDynamic on a nil value");
		}
	}
}

