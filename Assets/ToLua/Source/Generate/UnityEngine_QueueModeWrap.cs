//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_QueueModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.QueueMode));
		L.RegVar("CompleteOthers", new LuaCSFunction(get_CompleteOthers), null);
		L.RegVar("PlayNow", new LuaCSFunction(get_PlayNow), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<UnityEngine.QueueMode>.Check = CheckType;
		StackTraits<UnityEngine.QueueMode>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.QueueMode arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_UnityEngine_QueueMode = typeof(UnityEngine.QueueMode);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_UnityEngine_QueueMode, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CompleteOthers(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.QueueMode.CompleteOthers);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PlayNow(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.QueueMode.PlayNow);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		UnityEngine.QueueMode o = (UnityEngine.QueueMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

