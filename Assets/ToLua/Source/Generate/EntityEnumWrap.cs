//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EntityEnumWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(EntityEnum));
		L.RegVar("CharacterPlayer", new LuaCSFunction(get_CharacterPlayer), null);
		L.RegVar("CharacterMonster", new LuaCSFunction(get_CharacterMonster), null);
		L.RegVar("CharacterNpc", new LuaCSFunction(get_CharacterNpc), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<EntityEnum>.Check = CheckType;
		StackTraits<EntityEnum>.Push = Push;
	}

	static void Push(IntPtr L, EntityEnum arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_EntityEnum = typeof(EntityEnum);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_EntityEnum, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CharacterPlayer(IntPtr L)
	{
		ToLua.Push(L, EntityEnum.CharacterPlayer);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CharacterMonster(IntPtr L)
	{
		ToLua.Push(L, EntityEnum.CharacterMonster);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CharacterNpc(IntPtr L)
	{
		ToLua.Push(L, EntityEnum.CharacterNpc);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		EntityEnum o = (EntityEnum)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

