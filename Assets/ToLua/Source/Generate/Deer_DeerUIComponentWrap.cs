//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Deer_DeerUIComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Deer.DeerUIComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("LoadAssetAsync", new LuaCSFunction(LoadAssetAsync));
		L.RegFunction("Unspwn", new LuaCSFunction(Unspwn));
		L.RegFunction("IsLoadingUIForm", new LuaCSFunction(IsLoadingUIForm));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Deer.DeerUIComponent obj = (Deer.DeerUIComponent)ToLua.CheckObject<Deer.DeerUIComponent>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.LoadAssetAsync(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Unspwn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Deer.DeerUIComponent obj = (Deer.DeerUIComponent)ToLua.CheckObject<Deer.DeerUIComponent>(L, 1);
			object arg0 = ToLua.ToVarObject(L, 2);
			obj.Unspwn(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsLoadingUIForm(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Deer.DeerUIComponent obj = (Deer.DeerUIComponent)ToLua.CheckObject<Deer.DeerUIComponent>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.IsLoadingUIForm(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

