//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("StartLuaMain", new LuaCSFunction(StartLuaMain));
		L.RegFunction("GetMainState", new LuaCSFunction(GetMainState));
		L.RegFunction("IsInitLuaComplete", new LuaCSFunction(IsInitLuaComplete));
		L.RegFunction("CallFunction", new LuaCSFunction(CallFunction));
		L.RegFunction("LuaGC", new LuaCSFunction(LuaGC));
		L.RegFunction("LoadFile", new LuaCSFunction(LoadFile));
		L.RegFunction("UnloadFile", new LuaCSFunction(UnloadFile));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("LuaAssetExtInBundle", new LuaCSFunction(get_LuaAssetExtInBundle), null);
		L.RegFunction("OnLoadScriptSuccess", new LuaCSFunction(LuaComponent_OnLoadScriptSuccess));
		L.RegFunction("OnLoadScriptFailure", new LuaCSFunction(LuaComponent_OnLoadScriptFailure));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartLuaMain(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.StartLuaMain();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetMainState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			LuaInterface.LuaState o = obj.GetMainState();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsInitLuaComplete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			bool o = obj.IsInitLuaComplete();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CallFunction(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checkinteger(L, 3);
				object[] o = obj.CallFunction(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4)
			{
				LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject<UnityEngine.GameObject>(L, 3);
				int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
				object[] o = obj.CallFunction(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 5)
			{
				LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject<UnityEngine.GameObject>(L, 3);
				int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				object[] o = obj.CallFunction(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaComponent.CallFunction");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaGC(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			obj.LuaGC();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadFile(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				LuaComponent.OnLoadScriptSuccess arg2 = (LuaComponent.OnLoadScriptSuccess)ToLua.CheckDelegate<LuaComponent.OnLoadScriptSuccess>(L, 4);
				obj.LoadFile(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				LuaComponent.OnLoadScriptSuccess arg2 = (LuaComponent.OnLoadScriptSuccess)ToLua.CheckDelegate<LuaComponent.OnLoadScriptSuccess>(L, 4);
				LuaComponent.OnLoadScriptFailure arg3 = (LuaComponent.OnLoadScriptFailure)ToLua.CheckDelegate<LuaComponent.OnLoadScriptFailure>(L, 5);
				obj.LoadFile(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaComponent.LoadFile");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaComponent obj = (LuaComponent)ToLua.CheckObject<LuaComponent>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.UnloadFile(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaAssetExtInBundle(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, LuaComponent.LuaAssetExtInBundle);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaComponent_OnLoadScriptSuccess(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<LuaComponent.OnLoadScriptSuccess>.Create(func);
				ToLua.Push(L, arg1);
				func.Dispose();
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<LuaComponent.OnLoadScriptSuccess>.Create(func, self);
				ToLua.Push(L, arg1);
				func.Dispose();
				self.Dispose();
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaComponent_OnLoadScriptFailure(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<LuaComponent.OnLoadScriptFailure>.Create(func);
				ToLua.Push(L, arg1);
				func.Dispose();
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<LuaComponent.OnLoadScriptFailure>.Create(func, self);
				ToLua.Push(L, arg1);
				func.Dispose();
				self.Dispose();
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

